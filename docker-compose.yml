version: "3.7"
x-logging:
  &default-logging
  driver: journald
volumes:
  influxdb_data:
  influxdb_config:
  grafana_data:
  letsencrypt_config:
  letsencrypt_data:
  mosquito_data:
  nginx_config:
  oauth2proxy_config:
services:
  # oauth2-proxy:
  #   image: quay.io/oauth2-proxy/oauth2-proxy
  #   container_name: oauth2-proxy
  #   volumes:
  #     - ./oauth2-proxy/proxy.cfg:/proxy.cfg:Z
  #   restart: always
  #   logging:
  #     driver: journald
  # nginx:
  #   image: docker.io/library/nginx:latest
  #   container_name: nginx
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:Z
  #     - letsencrypt_data:/etc/letsencrypt
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   depends_on:
  #     - oauth2-proxy
  #   restart: always
  #   logging:
  #     driver: journald

  coredns:
    build:
      context: .
      dockerfile: coredns/Dockerfile
    container_name: coredns
    logging: *default-logging
    ports:
      - "53:53/udp"
      - "53:53/tcp"

  grafana:
    image: docker.io/grafana/grafana:latest
    container_name: grafana
    depends_on:
      - influxdb
    environment:
      - GF_SECURITY_ADMIN_PASSWORD
    logging:
      driver: journald
    ports:
      - "3000:3000"
    restart: always
    volumes:
      - grafana_data:/var/lib/grafana

  influxdb:
    image: docker.io/library/influxdb:latest
    container_name: influxdb
    environment:
      - DOCKER_INFLUXDB_INIT_PASSWORD
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_ORG=Home
      - DOCKER_INFLUXDB_INIT_BUCKET=Environment
    logging:
      driver: journald
    restart: always
    volumes:
      - influxdb_config:/etc/influxdb2
      - influxdb_data:/var/lib/influxdb2

  influxdb-poller:
    build:
      context: .
      dockerfile: influxdb-poller/Dockerfile
    container_name: influxdb-poller
    depends_on:
      - influxdb
      - mosquitto
    environment:
      - MQTT_BROKER
    logging:
      driver: journald
    restart: always
    volumes:
      - influxdb_config:/etc/influxdb2

  mosquitto:
    build:
      context: .
      dockerfile: mosquitto/Dockerfile
    container_name: mosquitto
    ports:
      - "1883:1883"
    logging:
      driver: journald
    restart: always
    volumes:
      - mosquito_data:/mosquitto/data
      - letsencrypt_data:/etc/letsencrypt

  mqtt-bridge:
    build:
      context: .
      dockerfile: mqtt-bridge/Dockerfile
    container_name: mqtt-bridge
    depends_on:
      - influxdb
      - mosquitto
    environment:
      - MQTT_BROKER
    logging:
      driver: journald
    restart: always
    volumes:
      - influxdb_config:/etc/influxdb2

  syslog-bridge:
    build:
      context: .
      dockerfile: syslog-bridge/Dockerfile
    container_name: syslog-bridge
    depends_on:
      - influxdb
    logging:
      driver: journald
    restart: always
    volumes:
      - /var/log/iot:/var/log/iot
      - influxdb_config:/etc/influxdb2

  telegram-bridge:
    build:
      context: .
      dockerfile: telegram-bridge/Dockerfile
    container_name: telegram-bridge
    depends_on:
      - mosquitto
    environment:
      - TELEGRAM_TOKEN
      - TELEGRAM_CHAT_ID
      - MQTT_BROKER
    logging:
      driver: journald
    restart: always

  syslog-influx-bridge:
    build:
      context: .
      dockerfile: syslog-influx-bridge/Dockerfile
    container_name: syslog-influx-bridge
    depends_on:
      - influxdb
    logging: *default-logging
    restart: unless-stopped
    volumes:
      - /var/log/iot:/var/log/iot
      - influxdb_config:/etc/influxdb2:ro


  weather-poller:
    build:
      context: .
      dockerfile: weather-poller/Dockerfile
    container_name: weather-poller
    depends_on:
      - influxdb
    environment:
    - OBSERVATION_STATIONS
    volumes:
      - influxdb_config:/etc/influxdb2
    restart: always
    logging:
      driver: journald

networks:
  default:
    name: iotcloud
