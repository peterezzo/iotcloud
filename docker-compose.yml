version: "3.7"
x-logging:
  &default-logging
  driver: journald
volumes:
  influxdb_data:
  influxdb_config:
  grafana_data:
  letsencrypt_data:
  mosquito_data:
  nginx_config:
  oauth2proxy_config:
services:

  certbot:
    build:
      context: .
      dockerfile: certbot/Dockerfile
    container_name: certbot
    environment:
      - DOMAIN
    logging: *default-logging
    volumes:
      - letsencrypt_data:/etc/letsencrypt

  coredns:
    build:
      context: .
      dockerfile: coredns/Dockerfile
    container_name: coredns
    logging: *default-logging
    ports:
      - "53:53/udp"
      - "53:53/tcp"

  grafana:
    image: docker.io/grafana/grafana:latest
    container_name: grafana
    depends_on:
      - influxdb
    environment:
      - GF_SECURITY_ADMIN_PASSWORD
    logging: *default-logging
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana

  influxdb:
    image: docker.io/library/influxdb:latest
    container_name: influxdb
    environment:
      - DOCKER_INFLUXDB_INIT_PASSWORD
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_ORG=Home
      - DOCKER_INFLUXDB_INIT_BUCKET=Environment
    logging: *default-logging
    restart: unless-stopped
    volumes:
      - influxdb_config:/etc/influxdb2
      - influxdb_data:/var/lib/influxdb2

  mosquitto:
    build:
      context: .
      dockerfile: mosquitto/Dockerfile
    container_name: mosquitto
    depends_on:
      - certbot
    ports:
      - "1883:1883"
      - "8883:8883"
    logging: *default-logging
    restart: unless-stopped
    volumes:
      - mosquito_data:/mosquitto/data
      - letsencrypt_data:/etc/letsencrypt

  mqtt-influx-bridge:
    build:
      context: .
      dockerfile: mqtt-influx-bridge/Dockerfile
    container_name: mqtt-influx-bridge
    depends_on:
      - influxdb
      - mosquitto
    environment:
      - MQTT_BROKER
    logging: *default-logging
    restart: unless-stopped
    volumes:
      - influxdb_config:/etc/influxdb2:ro

  mqtt-postgres-bridge:
    build:
      context: .
      dockerfile: mqtt-postgres-bridge/Dockerfile
    container_name: mqtt-postgres-bridge
    depends_on:
      - mosquitto
      - postgres
    environment:
      - POSTGRES_DB
      - POSTGRES_PASSWORD
      - MQTT_BROKER
    logging: *default-logging
    restart: unless-stopped

  mqtt-telegram-bridge:
    build:
      context: .
      dockerfile: mqtt-telegram-bridge/Dockerfile
    container_name: mqtt-telegram-bridge
    depends_on:
      - mosquitto
    environment:
      - TELEGRAM_TOKEN
      - TELEGRAM_CHAT_ID
      - MQTT_BROKER
    logging: *default-logging
    restart: unless-stopped

  postgres:
    image: docker.io/library/postgres:14
    container_name: postgres
    environment:
      - POSTGRES_DB
      - POSTGRES_PASSWORD
    logging: *default-logging
    restart: unless-stopped

  syslog-influx-bridge:
    build:
      context: .
      dockerfile: syslog-influx-bridge/Dockerfile
    container_name: syslog-influx-bridge
    depends_on:
      - influxdb
    logging: *default-logging
    restart: unless-stopped
    volumes:
      - /var/log/iot:/var/log/iot
      - influxdb_config:/etc/influxdb2:ro

  weather-poller:
    build:
      context: .
      dockerfile: weather-poller/Dockerfile
    container_name: weather-poller
    depends_on:
      - influxdb
    environment:
    - OBSERVATION_STATIONS
    logging: *default-logging
    restart: unless-stopped
    volumes:
      - influxdb_config:/etc/influxdb2:ro

networks:
  default:
    name: iotcloud
